pg.datasource.dynamic.druid.enabled=true

# Name of the datasource.
pg.datasource.dynamic.druid.default-ds.name=dataSource

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
pg.datasource.dynamic.druid.default-ds.initial-size=5
pg.datasource.dynamic.druid.default-ds.min-idle=5
pg.datasource.dynamic.druid.default-ds.max-active=20
# 配置获取连接等待超时的时间,单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
pg.datasource.dynamic.druid.default-ds.max-wait=120000
pg.datasource.dynamic.druid.default-ds.use-unfair-lock=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
pg.datasource.dynamic.druid.default-ds.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
pg.datasource.dynamic.druid.default-ds.min-evictable-idle-time-millis=300000
# 设为true，这个配置不影响性能，并且保证安全性。
pg.datasource.dynamic.druid.default-ds.test-while-idle=true
# 设为true，这个配置会降低性能
pg.datasource.dynamic.druid.default-ds.test-on-borrow=false
# 设为true，这个配置会降低性能
pg.datasource.dynamic.druid.default-ds.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小 ；PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。
pg.datasource.dynamic.druid.default-ds.pool-prepared-statements=true
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
pg.datasource.dynamic.druid.default-ds.max-pool-prepared-statement-per-connection-size=100


