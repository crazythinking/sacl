#Unfortunately, OSIV (Open Session in View) is enabled by default in Spring Boot, and OSIV is really a bad idea from a performance and scalability perspective.
#该设置用于JPA的懒加载，由于容易造成性能问题，不建议使用，禁止使用@ManyToOne这类的注解；
spring.jpa.open-in-view=false
#配置SQL生成命名策略，不用spring默认的会转为小写；配置为保持原命名方式
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# Name of the datasource.
spring.datasource.druid.name=dataSource

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间,单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.max-wait=120000
spring.datasource.druid.use-unfair-lock=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 设为true，这个配置不影响性能，并且保证安全性。
spring.datasource.druid.test-while-idle=true
# 设为true，这个配置会降低性能
spring.datasource.druid.test-on-borrow=false
# 设为true，这个配置会降低性能
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小 ；PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。
spring.datasource.druid.pool-prepared-statements=true
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=100
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.druid.filters=stat,wall,log4j2
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=false

# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled=false
spring.datasource.druid.web-stat-filter.urlPattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.sessionStatMaxCount=1000
spring.datasource.druid.web-stat-filter.sessionStatEnable=true
#spring.datasource.druid.webStatFilter.principalSessionName=
#spring.datasource.druid.webStatFilter.principalCookieName=
spring.datasource.druid.web-stat-filter.profileEnable=true

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled=false
spring.datasource.druid.stat-view-servlet.urlPattern=/druid/*
spring.datasource.druid.stat-view-servlet.resetEnable=false
spring.datasource.druid.stat-view-servlet.loginUsername=${spring.security.user.name}
spring.datasource.druid.stat-view-servlet.loginPassword=${spring.security.user.password}
#IP白名单 没有配置或者为空，则允许所有访问
#spring.datasource.druid.statViewServlet.allow=127.0.0.1
#IP黑名单 deny优先于allow
#spring.datasource.druid.statViewServlet.deny=

# Spring监控配置，说明请参考Druid Github Wiki，配置_配置WebStatFilter
# 如果spring.datasource.druid.aop-patterns要代理的类没有定义interface请设置spring.aop.proxy-target-class=true
#spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔

# 配置日志输出
spring.datasource.druid.filter.slf4j.enabled=false
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false

