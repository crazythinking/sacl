#作为能力输出的微服务相对于OAuth Server来说其本身是Client，同时又是Resource Server；
#因此需要分别设置client及resource相关配置

#client 配置，client-id,client-secret 要和认证服务中的配置一致, 无论是使用 inMemory 还是 jdbc 方式
security.oauth2.client.client-id=${spring.application.name}
security.oauth2.client.client-secret=${spring.application.name}-123456
security.oauth2.server=http://localhost:8085
#user-authorization-uri 是（authorization_code：授权码模式）需要的获取授权码的接口
#security.oauth2.client.user-authorization-uri=${security.oauth2.server}/oauth/authorize
#access-token-uri 是（password：资源所有者密码模式）需要用到的获取 token 的接口
security.oauth2.client.access-token-uri=${security.oauth2.server}/oauth/token

#resource server 配置
security.oauth2.resource.id=${spring.application.name}
security.oauth2.resource.user-info-uri=${security.oauth2.server}/oauth/user_info
#security.oauth2.resource.jwt.key-uri=${security.oauth2.server}/oauth/token_key
#注意认证服务端 JwtAccessTokenConverter设置的 SigningKey 要和配置文件中的 key-value 相同
#security.oauth2.resource.jwt.key-value=dev
security.oauth2.resource.token-info-uri=${security.oauth2.server}/oauth/check_token




